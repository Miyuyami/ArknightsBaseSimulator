@inherits AbstractClickableBaseSlot

@inject IModalService ModalService

<div class="btn btn-dark w-100 h-100 d-flex flex-column align-items-center justify-content-center" @onclick="@this.InternalOnClick">
    <div class="row">
        @if (this.Game.TryGetSlot(this.Data, out Slot slot))
        {
            <div class="col">🧱</div>
        }
        else
        {
            <div class="col">SLOT NOT FOUND</div>
        }
    </div>
    @if (this.IsInBuildMode &&
         this.CanUnlock)
    {
        <div class="row">
            <div class="col">
                (cleanable)
            </div>
        </div>
    }
</div>

@code {
    [CascadingParameter] public LockedSlotData Data { get; set; }

    private bool CanUnlock => this.Game.CanUnlock(this.Data);

    private async Task InternalOnClick(MouseEventArgs e)
    {
        if (this.IsInBuildMode)
        {
            var parameters = new ModalParameters();
            parameters.Add("Game", this.Game);
            parameters.Add("Data", this.Data);
            var options = new ModalOptions()
            {
                Position = "blazored-modal-center",
                HideCloseButton = true,
            };
            this.ModalService.Show<UnlockBaseSlotModal>(parameters, options);
        }

        await this.OnClick.InvokeAsync(this.Data);
    }
}
