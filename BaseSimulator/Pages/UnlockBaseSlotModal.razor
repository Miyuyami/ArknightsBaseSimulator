@inject IModalService ModalService

<div class="container-fluid d-flex flex-column">
    <CascadingValue Value="@this.Game">
        @{
            if (this.Game.TryGetSlot(this.Data, out Slot slot))
            {
                <CascadingValue Value="@slot">
                    @if (this.Game.CanUnlock(slot))
                    {
                        // unlock
                    }
                    else if (this.Game.DoesMeetUnlockRequirements(slot))
                    {
                        <div class="row">
                            <div class="col">The slot is not connected to the control center. Unable to clean.</div>
                        </div>
                        <div class="row w-25">
                            <div class="btn btn-dark">
                                ✔
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row flex-fill">
                            <div class="col">
                                <BuildingRequirements Title="No signal detected on this floor. Unable to clean." />
                            </div>
                        </div>
                        <div class="row">
                            <div class="btn btn-dark h-25 w-100" @onclick="Cancel">
                                ✔
                            </div>
                        </div>
                    }
                </CascadingValue>
            }
            else
            {
                <div>Can't find slot data</div>
            }
        }
    </CascadingValue>
</div>

@code {
    [CascadingParameter]
    private ModalParameters Parameters { get; set; }

    public Game Game { get; set; }
    public LockedSlotData Data { get; set; }

    protected override void OnInitialized()
    {
        this.Game = this.Parameters.Get<Game>("Game");
        this.Data = this.Parameters.Get<LockedSlotData>("Data");
    }

    private void Cancel()
    {
        this.ModalService.Cancel();
    }
}
